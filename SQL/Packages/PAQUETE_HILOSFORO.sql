--PAQUETES (HILOSFORO, RESPUESTA, OFICINA, INFORMACIONCONTACTOEMPRESA)
    --HILOSFORO
        --CABECERA
CREATE OR REPLACE PACKAGE PAQ_HILOSFORO IS
PROCEDURE INICIALIZAR;
PROCEDURE CONSULTAR;
PROCEDURE INSERTAR(W_TITULO IN HILOSFORO.TITULO%TYPE,W_DESCRIPCION IN HILOSFORO.DESCRIPCION%TYPE, 
W_FECHA IN HILOSFORO.FECHA%TYPE, W_OID_US IN HILOSFORO.OID_US%TYPE);
PROCEDURE ACTUALIZAR (W_TITULO IN HILOSFORO.TITULO%TYPE,W_DESCRIPCION IN HILOSFORO.DESCRIPCION%TYPE,
W_FECHA IN HILOSFORO.FECHA%TYPE,W_OID_US IN HILOSFORO.OID_US%TYPE);
PROCEDURE ELIMINAR (W_TITULO IN HILOSFORO.TITULO%TYPE);
END;
/ 
        --CUERPO
CREATE OR REPLACE PACKAGE BODY PAQ_HILOSFORO IS
CURSOR C IS
SELECT * FROM HILOSFORO;
W_HILOSFORO HILOSFORO%ROWTYPE;

PROCEDURE INICIALIZAR IS
BEGIN
DELETE FROM HILOSFORO;
END INICIALIZAR;

PROCEDURE CONSULTAR IS
BEGIN
OPEN C;
FETCH C INTO W_HILOSFORO;
DBMS_OUTPUT.PUT_LINE(RPAD('TITULO:', 25) || RPAD('DESCRIPCION:', 25) || RPAD('FECHA:', 25));
DBMS_OUTPUT.PUT_LINE(LPAD('-', 120, '-'));
WHILE C%FOUND LOOP
DBMS_OUTPUT.PUT_LINE(RPAD(W_HILOSFORO.TITULO, 25) || RPAD(W_HILOSFORO.DESCRIPCION, 25) || RPAD(W_HILOSFORO.FECHA, 25));
FETCH C INTO W_HILOSFORO;
END LOOP;
CLOSE C;
END CONSULTAR;

PROCEDURE INSERTAR(W_TITULO IN HILOSFORO.TITULO%TYPE,W_DESCRIPCION IN HILOSFORO.DESCRIPCION%TYPE,
W_FECHA IN HILOSFORO.FECHA%TYPE,W_OID_US IN HILOSFORO.OID_US%TYPE) IS
W_HILOSFORO HILOSFORO%ROWTYPE;
BEGIN
INSERT INTO HILOSFORO (TITULO, DESCRIPCION, FECHA, OID_US) VALUES (W_TITULO, W_DESCRIPCION, W_FECHA, W_OID_US);
SELECT * INTO W_HILOSFORO FROM HILOSFORO WHERE TITULO=W_TITULO;
IF W_HILOSFORO.TITULO != W_TITULO OR W_HILOSFORO.DESCRIPCION != W_DESCRIPCION OR
W_HILOSFORO.FECHA != W_FECHA OR W_HILOSFORO.OID_US != W_OID_US
THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO INSERTADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ROLLBACK;
END INSERTAR;

PROCEDURE ACTUALIZAR (W_TITULO IN HILOSFORO.TITULO%TYPE,W_DESCRIPCION IN HILOSFORO.DESCRIPCION%TYPE,
W_FECHA IN HILOSFORO.FECHA%TYPE,W_OID_US IN HILOSFORO.OID_US%TYPE) IS
BEGIN
UPDATE HILOSFORO SET DESCRIPCION=W_DESCRIPCION WHERE TITULO=W_TITULO;
UPDATE HILOSFORO SET FECHA=W_FECHA WHERE TITULO=W_TITULO;
UPDATE HILOSFORO SET OID_US=W_OID_US WHERE TITULO=W_TITULO;
SELECT * INTO W_HILOSFORO FROM HILOSFORO WHERE TITULO = W_TITULO;
IF W_HILOSFORO.TITULO != W_TITULO OR W_HILOSFORO.DESCRIPCION != W_DESCRIPCION OR
W_HILOSFORO.FECHA != W_FECHA OR W_HILOSFORO.OID_US != W_OID_US
THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ACTUALIZADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ROLLBACK;
END ACTUALIZAR;

PROCEDURE ELIMINAR (W_TITULO IN HILOSFORO.TITULO%TYPE) IS
AUX NUMBER := 0;
BEGIN
DELETE FROM HILOSFORO WHERE TITULO = W_TITULO;
SELECT COUNT(*) INTO AUX FROM HILOSFORO WHERE TITULO = W_TITULO;
IF AUX <> 0 THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ELIMINADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ROLLBACK;
END ELIMINAR;

END;
/

