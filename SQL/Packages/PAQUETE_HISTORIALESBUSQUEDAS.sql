--PAQUETES
    --HISTORIALESBUSQUEDA
        --ESPECIFICACIONES
CREATE OR REPLACE PACKAGE PAQ_HISTORIALESBUSQUEDA IS
PROCEDURE INICIALIZAR;
PROCEDURE CONSULTAR;
PROCEDURE INSERTAR(W_FECHAYHORA IN HISTORIALESBUSQUEDA.FECHAYHORA%TYPE, W_OID_IN IN HISTORIALESBUSQUEDA.OID_IN%TYPE, W_OID_US IN HISTORIALESBUSQUEDA.OID_US%TYPE);
PROCEDURE ACTUALIZAR (W_OID_HB IN HISTORIALESBUSQUEDA.OID_HB%TYPE, W_FECHAYHORA IN HISTORIALESBUSQUEDA.FECHAYHORA%TYPE, 
W_OID_IN IN HISTORIALESBUSQUEDA.OID_IN%TYPE, W_OID_US IN HISTORIALESBUSQUEDA.OID_US%TYPE);
PROCEDURE ELIMINAR (W_OID_HB IN HISTORIALESBUSQUEDA.OID_HB%TYPE);
END;
/ 
        --CUERPOS
CREATE OR REPLACE PACKAGE BODY PAQ_HISTORIALESBUSQUEDA IS
CURSOR C IS
SELECT * FROM HISTORIALESBUSQUEDA;
W_HISTORIALESBUSQUEDA HISTORIALESBUSQUEDA%ROWTYPE;

PROCEDURE INICIALIZAR IS
BEGIN
DELETE FROM HISTORIALESBUSQUEDA;
END INICIALIZAR;

PROCEDURE CONSULTAR IS
BEGIN
OPEN C;
FETCH C INTO W_HISTORIALESBUSQUEDA;
DBMS_OUTPUT.PUT_LINE(RPAD('ID HISTORIAL:', 25) || RPAD('FECHA Y HORA:', 25) || RPAD('INMUEBLE:', 25) || RPAD('USUARIO:', 25) );
DBMS_OUTPUT.PUT_LINE(LPAD('-', 120, '-'));
WHILE C%FOUND LOOP
DBMS_OUTPUT.PUT_LINE(RPAD(W_HISTORIALESBUSQUEDA.OID_HB, 25) || RPAD(W_HISTORIALESBUSQUEDA.FECHAYHORA, 25) || RPAD(W_HISTORIALESBUSQUEDA.OID_IN, 25) ||
RPAD(W_HISTORIALESBUSQUEDA.OID_US, 25));
FETCH C INTO W_HISTORIALESBUSQUEDA;
END LOOP;
CLOSE C;
END CONSULTAR;

PROCEDURE INSERTAR(W_FECHAYHORA IN HISTORIALESBUSQUEDA.FECHAYHORA%TYPE, W_OID_IN IN HISTORIALESBUSQUEDA.OID_IN%TYPE, 
W_OID_US IN HISTORIALESBUSQUEDA.OID_US%TYPE) IS
W_OID_HB HISTORIALESBUSQUEDA.OID_HB%TYPE;
BEGIN
INSERT INTO HISTORIALESBUSQUEDA (OID_HB, FECHAYHORA, OID_IN, OID_US) VALUES (W_OID_HB, W_FECHAYHORA, W_OID_IN, W_OID_US);
W_OID_HB := SEC_HISTORIALESBUSQUEDA.CURRVAL;
SELECT * INTO W_HISTORIALESBUSQUEDA FROM HISTORIALESBUSQUEDA WHERE FECHAYHORA = W_FECHAYHORA;
IF W_HISTORIALESBUSQUEDA.OID_HB != W_OID_HB OR W_HISTORIALESBUSQUEDA.OID_HB !=W_OID_HB OR W_HISTORIALESBUSQUEDA.OID_IN !=W_OID_IN OR 
W_HISTORIALESBUSQUEDA.OID_US !=W_OID_US
THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO INSERTADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ROLLBACK;
END INSERTAR;

PROCEDURE ACTUALIZAR (W_OID_HB IN HISTORIALESBUSQUEDA.OID_HB%TYPE, W_FECHAYHORA IN HISTORIALESBUSQUEDA.FECHAYHORA%TYPE, W_OID_IN IN HISTORIALESBUSQUEDA.OID_IN%TYPE, W_OID_US IN HISTORIALESBUSQUEDA.OID_US%TYPE) IS
BEGIN
UPDATE HISTORIALESBUSQUEDA SET OID_HB=W_OID_HB WHERE FECHAYHORA=W_FECHAYHORA;
UPDATE HISTORIALESBUSQUEDA SET OID_IN=W_OID_IN WHERE FECHAYHORA=W_FECHAYHORA;
UPDATE HISTORIALESBUSQUEDA SET OID_US=W_OID_US WHERE FECHAYHORA=W_FECHAYHORA;
SELECT * INTO W_HISTORIALESBUSQUEDA FROM HISTORIALESBUSQUEDA WHERE OID_HB = W_OID_HB;
IF W_HISTORIALESBUSQUEDA.OID_HB != W_OID_HB OR W_HISTORIALESBUSQUEDA.OID_HB !=W_OID_HB OR W_HISTORIALESBUSQUEDA.OID_IN !=W_OID_IN OR
W_HISTORIALESBUSQUEDA.OID_US !=W_OID_US
THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ACTUALIZADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ROLLBACK;
END ACTUALIZAR;

PROCEDURE ELIMINAR (W_OID_HB IN HISTORIALESBUSQUEDA.OID_HB%TYPE) IS
AUX NUMBER := 0;
BEGIN
DELETE FROM HISTORIALESBUSQUEDA WHERE OID_HB = W_OID_HB;
SELECT COUNT(*) INTO AUX FROM HISTORIALESBUSQUEDA WHERE OID_HB = W_OID_HB;
IF AUX <> 0 THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ELIMINADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ROLLBACK;
END ELIMINAR;

END;
