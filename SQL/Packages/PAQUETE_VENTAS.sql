--PAQUETES
    --VENTAS
        --ESPECIFICACIONES
CREATE OR REPLACE PACKAGE PAQ_VENTAS IS
PROCEDURE INICIALIZAR;
PROCEDURE CONSULTAR;
PROCEDURE INSERTAR(W_OID_IN IN VENTAS.OID_IN%TYPE,W_FECHA_VENTA IN VENTAS.FECHA_VENTA%TYPE,
W_OID_CO IN VENTAS.OID_CO%TYPE,W_OID_US IN VENTAS.OID_US%TYPE);
PROCEDURE ACTUALIZAR (W_OID_IN IN VENTAS.OID_IN%TYPE,W_OID_VE IN VENTAS.OID_VE%TYPE,W_FECHA_VENTA IN VENTAS.FECHA_VENTA%TYPE,
W_OID_CO IN VENTAS.OID_CO%TYPE,W_OID_US IN VENTAS.OID_US%TYPE);
PROCEDURE ELIMINAR (W_OID_VE IN VENTAS.OID_VE%TYPE);
END;
/ 
        --CUERPOS
CREATE OR REPLACE PACKAGE BODY PAQ_VENTAS IS
CURSOR C IS
SELECT * FROM VENTAS;
W_VENTAS VENTAS%ROWTYPE;

PROCEDURE INICIALIZAR IS
BEGIN
DELETE FROM VENTAS;
END INICIALIZAR;

PROCEDURE CONSULTAR IS
BEGIN
OPEN C;
FETCH C INTO W_VENTAS;
DBMS_OUTPUT.PUT_LINE(RPAD('ID VENTA:', 25) || RPAD('ID INMUEBLE:', 25) || RPAD('FECHA DE VENTA:', 25) 
|| RPAD('ID COMERCIAL:', 25)|| RPAD('ID USUARIO:', 25));
DBMS_OUTPUT.PUT_LINE(LPAD('-', 120, '-'));
WHILE C%FOUND LOOP
DBMS_OUTPUT.PUT_LINE(RPAD(W_VENTAS.OID_VE, 25) || RPAD(W_VENTAS.OID_IN, 25) || RPAD(W_VENTAS.FECHA_VENTA, 25)||
RPAD(W_VENTAS.OID_CO, 25) ||RPAD(W_VENTAS.OID_US, 25));
FETCH C INTO W_VENTAS;
END LOOP;
CLOSE C;
END CONSULTAR;

PROCEDURE INSERTAR(W_OID_IN IN VENTAS.OID_IN%TYPE,W_FECHA_VENTA IN VENTAS.FECHA_VENTA%TYPE,
W_OID_CO IN VENTAS.OID_CO%TYPE,W_OID_US IN VENTAS.OID_US%TYPE) IS
W_OID_VE VENTAS.OID_VE%TYPE;
BEGIN
INSERT INTO VENTAS (OID_IN, FECHA_VENTA, OID_CO, OID_US) VALUES (W_OID_IN, W_FECHA_VENTA, W_OID_CO, W_OID_US);
W_OID_VE := SEC_VENTAS.CURRVAL;
SELECT * INTO W_VENTAS FROM VENTAS WHERE OID_VE = W_OID_VE;
IF W_VENTAS.OID_VE <> W_OID_VE OR W_VENTAS.OID_IN <> W_OID_IN OR W_VENTAS.FECHA_VENTA <> W_FECHA_VENTA OR
W_VENTAS.OID_CO <> W_OID_CO OR W_VENTAS.OID_US <> W_OID_US 
THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO INSERTADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ROLLBACK;
END INSERTAR;

PROCEDURE ACTUALIZAR (W_OID_IN IN VENTAS.OID_IN%TYPE,W_OID_VE IN VENTAS.OID_VE%TYPE,W_FECHA_VENTA IN VENTAS.FECHA_VENTA%TYPE,
W_OID_CO IN VENTAS.OID_CO%TYPE,W_OID_US IN VENTAS.OID_US%TYPE) IS
BEGIN
UPDATE VENTAS SET OID_IN=W_OID_IN WHERE OID_VE=W_OID_VE;
UPDATE VENTAS SET FECHA_VENTA=W_FECHA_VENTA WHERE OID_VE=W_OID_VE;
UPDATE VENTAS SET OID_CO=W_OID_CO WHERE OID_VE=W_OID_VE;
UPDATE VENTAS SET OID_US=W_OID_US WHERE OID_VE=W_OID_VE;
SELECT * INTO W_VENTAS FROM VENTAS WHERE OID_IN = W_OID_IN;
IF  W_VENTAS.OID_VE != W_OID_VE OR W_VENTAS.OID_IN != W_OID_IN OR W_VENTAS.FECHA_VENTA != W_FECHA_VENTA OR
W_VENTAS.OID_CO != W_OID_CO OR W_VENTAS.OID_US != W_OID_US 
THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ACTUALIZADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ROLLBACK;
END ACTUALIZAR;

PROCEDURE ELIMINAR (W_OID_VE IN VENTAS.OID_VE%TYPE) IS
AUX NUMBER := 0;
BEGIN
DELETE FROM VENTAS WHERE OID_VE = W_OID_VE;
SELECT COUNT(*) INTO AUX FROM VENTAS WHERE OID_VE = W_OID_VE;
IF AUX <> 0 THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ELIMINADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ROLLBACK;
END ELIMINAR;

END;
/