--RESERVAS
        
--ESPECIFICACIONES

CREATE OR REPLACE PACKAGE PAQ_RESERVAS IS
PROCEDURE INICIALIZAR;
PROCEDURE CONSULTAR;
PROCEDURE INSERTAR(W_OID_AL IN RESERVAS.OID_AL%TYPE, W_OID_US IN RESERVAS.OID_US%TYPE);
PROCEDURE ACTUALIZAR (W_OID_RES IN RESERVAS.OID_RES%TYPE, W_OID_AL IN RESERVAS.OID_AL%TYPE, W_OID_US IN RESERVAS.OID_US%TYPE);
PROCEDURE ELIMINAR (W_OID_RES IN RESERVAS.OID_RES%TYPE);
END;
/ 
    --CUERPOS

CREATE OR REPLACE PACKAGE BODY PAQ_RESERVAS IS
CURSOR C IS
SELECT * FROM RESERVAS;
W_RESERVAS RESERVAS%ROWTYPE;

PROCEDURE INICIALIZAR IS
BEGIN
DELETE FROM RESERVAS;
END INICIALIZAR;

PROCEDURE CONSULTAR IS
BEGIN
OPEN C;
FETCH C INTO W_RESERVAS;
DBMS_OUTPUT.PUT_LINE(RPAD('ID RESERVA:', 25) || RPAD('ID ALQUILER:', 25)|| RPAD('ID USUARIO:', 25));
DBMS_OUTPUT.PUT_LINE(LPAD('-', 120, '-'));
WHILE C%FOUND LOOP
DBMS_OUTPUT.PUT_LINE(RPAD(W_RESERVAS.OID_RES, 25) || RPAD(W_RESERVAS.OID_AL, 25)|| RPAD(W_RESERVAS.OID_US, 25));
FETCH C INTO W_RESERVAS;
END LOOP;
CLOSE C;
END CONSULTAR;

PROCEDURE INSERTAR(W_OID_AL IN RESERVAS.OID_AL%TYPE, W_OID_US IN RESERVAS.OID_US%TYPE)IS
W_OID_RES RESERVAS.OID_RES%TYPE;
BEGIN
INSERT INTO RESERVAS(OID_RES,OID_AL, OID_US) VALUES (W_OID_RES,W_OID_AL, W_OID_US);
W_OID_RES := SEC_RESERVAS.CURRVAL;
SELECT * INTO W_RESERVAS FROM RESERVAS WHERE OID_RES = W_OID_RES;
IF W_RESERVAS.OID_AL != W_OID_AL OR  W_RESERVAS.OID_US != W_OID_US
THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO INSERTADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ROLLBACK;
END INSERTAR;

PROCEDURE ACTUALIZAR(W_OID_RES IN RESERVAS.OID_RES%TYPE, W_OID_AL IN RESERVAS.OID_AL%TYPE, W_OID_US IN RESERVAS.OID_US%TYPE) IS
BEGIN
UPDATE RESERVAS SET OID_AL = W_OID_AL WHERE OID_RES=W_OID_RES;
UPDATE RESERVAS SET OID_US = W_OID_US WHERE OID_RES=W_OID_RES;
SELECT * INTO W_RESERVAS FROM RESERVAS WHERE OID_RES = W_OID_US;
IF W_RESERVAS.OID_US != W_OID_US OR W_RESERVAS.OID_AL != W_OID_AL
THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ACTUALIZADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ROLLBACK;
END ACTUALIZAR;

PROCEDURE ELIMINAR (W_OID_RES IN RESERVAS.OID_RES%TYPE) IS
AUX NUMBER := 0;
BEGIN
DELETE FROM RESERVAS WHERE OID_RES = W_OID_RES;
SELECT COUNT(*) INTO AUX FROM RESERVAS WHERE OID_RES = W_OID_RES;
IF AUX <> 0 THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ELIMINADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ROLLBACK;
END ELIMINAR;
END;
/