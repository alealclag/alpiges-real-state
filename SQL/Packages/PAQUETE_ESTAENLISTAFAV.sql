--PAQUETES
    --EXTRAS
        --ESPECIFICACIONES
CREATE OR REPLACE PACKAGE PAQ_ESTAENLISTAFAV IS
PROCEDURE INICIALIZAR;
PROCEDURE CONSULTAR;
PROCEDURE INSERTAR(W_OID_IN IN ESTAENLISTAFAV.OID_IN%TYPE,W_OID_US IN ESTAENLISTAFAV.OID_US%TYPE);
PROCEDURE ACTUALIZAR (W_OID_ESTAENFAV IN ESTAENLISTAFAV.OID_ESTAENFAV%TYPE,W_OID_IN IN ESTAENLISTAFAV.OID_IN%TYPE,W_OID_US IN ESTAENLISTAFAV.OID_US%TYPE);
PROCEDURE ELIMINAR (W_OID_ESTAENFAV IN ESTAENLISTAFAV.OID_ESTAENFAV%TYPE);
END;
/ 
        --CUERPOS
CREATE OR REPLACE PACKAGE BODY PAQ_ESTAENLISTAFAV IS
CURSOR C IS
SELECT * FROM ESTAENLISTAFAV;
W_ESTAENLISTAFAV ESTAENLISTAFAV%ROWTYPE;

PROCEDURE INICIALIZAR IS
BEGIN
DELETE FROM ESTAENLISTAFAV;
END INICIALIZAR;

PROCEDURE CONSULTAR IS
BEGIN
OPEN C;
FETCH C INTO W_ESTAENLISTAFAV;
DBMS_OUTPUT.PUT_LINE(RPAD('ID ESTAENLALISTAFAV:', 25) ||RPAD('OID_IN:', 25) || RPAD('ID USUARIO:', 25));
DBMS_OUTPUT.PUT_LINE(LPAD('-', 120, '-'));
WHILE C%FOUND LOOP
DBMS_OUTPUT.PUT_LINE(RPAD(W_ESTAENLISTAFAV.OID_ESTAENFAV, 25) || RPAD(W_ESTAENLISTAFAV.OID_IN, 25) || RPAD(W_ESTAENLISTAFAV.OID_US, 25));
FETCH C INTO W_ESTAENLISTAFAV;
END LOOP;
CLOSE C;
END CONSULTAR;

PROCEDURE INSERTAR(W_OID_IN IN ESTAENLISTAFAV.OID_IN%TYPE,W_OID_US IN ESTAENLISTAFAV.OID_US%TYPE) IS
W_OID_ESTAENFAV ESTAENLISTAFAV.OID_ESTAENFAV%TYPE;
BEGIN
INSERT INTO ESTAENLISTAFAV (OID_IN, OID_US) VALUES (W_OID_IN, W_OID_US);
W_OID_ESTAENFAV := SEC_ESTAENLISTAFAV.CURRVAL;
SELECT * INTO W_ESTAENLISTAFAV FROM ESTAENLISTAFAV WHERE OID_ESTAENFAV = W_OID_ESTAENFAV;
IF W_ESTAENLISTAFAV.OID_IN <> W_OID_IN OR W_ESTAENLISTAFAV.OID_US <> W_OID_US
THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO INSERTADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO AL INSERTAR EL ELEMENTO');
ROLLBACK;
END INSERTAR;

PROCEDURE ACTUALIZAR (W_OID_ESTAENFAV IN ESTAENLISTAFAV.OID_ESTAENFAV%TYPE,W_OID_IN IN ESTAENLISTAFAV.OID_IN%TYPE,W_OID_US IN ESTAENLISTAFAV.OID_US%TYPE) IS
BEGIN
UPDATE ESTAENLISTAFAV SET OID_IN=W_OID_IN WHERE OID_ESTAENFAV=W_OID_ESTAENFAV;
UPDATE ESTAENLISTAFAV SET OID_US=W_OID_US WHERE OID_ESTAENFAV=W_OID_ESTAENFAV;
SELECT * INTO W_ESTAENLISTAFAV FROM ESTAENLISTAFAV WHERE OID_ESTAENFAV = W_OID_ESTAENFAV;
IF W_ESTAENLISTAFAV.OID_IN <> W_OID_IN OR W_ESTAENLISTAFAV.OID_US <> W_OID_US
THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ACTUALIZADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ACTUALIZACIÓN DEL ELEMENTO');
ROLLBACK;
END ACTUALIZAR;

PROCEDURE ELIMINAR (W_OID_ESTAENFAV IN ESTAENLISTAFAV.OID_ESTAENFAV%TYPE) IS
AUX NUMBER := 0;
BEGIN
DELETE FROM ESTAENLISTAFAV WHERE OID_ESTAENFAV = W_OID_ESTAENFAV;
SELECT COUNT(*) INTO AUX FROM ESTAENLISTAFAV WHERE W_OID_ESTAENFAV = W_OID_ESTAENFAV;
IF AUX <> 0 THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ELSE
DBMS_OUTPUT.PUT_LINE('ELEMENTO ELIMINADO CORRECTAMENTE');
END IF;
COMMIT;
EXCEPTION
WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('FALLO EN LA ELIMINACIÓN DEL ELEMENTO');
ROLLBACK;
END ELIMINAR;

END;
/
